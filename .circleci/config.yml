# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
#ORBS NOT AUTHORIZED
#orbs:
#  rails: finalcad/rails@2.3.0
#  node: circleci/node@2

executors:
  default:
    docker:
      # include node
      - image: circleci/ruby:<< parameters.ruby_version >>
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_PATH: ./vendor/bundle
          RAILS_ENV: test
          DB_USERNAME: db_username
          DB_NAME: test_database
          DB_PASSWORD: ''
      - image: circleci/postgres:<< parameters.psql_version >>
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: db/development
          POSTGRES_PASSWORD: '1234'
          POSTGRES_HOST_AUTH_METHOD: trust
    parameters:
      ruby_version:
        type: string
        default: 2.5.1-stretch-node
      psql_version:
        type: string
        default: "9.6.16"
jobs:
  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"

  test:
    docker:
      - image: cimg/ruby:2.7-node
      - image: cimg/postgres:14.0
        environment: # add POSTGRES environment variables.
          POSTGRES_USER: postgres
          POSTGRES_DB: db/test
          POSTGRES_PASSWORD: "1234"
    #parallelism: 3
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: "1234"
      RAILS_ENV: test
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: Install Dependancies
          command: bundle install
      - run:
          name: DB Locate
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: DB Setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Run RSPEC
          command:  |
            TESTFILES=$(circleci tests glob "spec/requests/*_spec.rb" | circleci tests split --split-by=timings --timings-type=classname)
            echo $TESTFILES
            bundle exec rspec --profile 10 --out ~/test_reports/rspec.xml --format progress ${TESTFILES} --format progress \

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  workflow:
    jobs:
      - build
      - test